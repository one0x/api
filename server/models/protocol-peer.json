{
    "name": "protocol_peer",
    "base": "PersistedModel",
    "idInjection": true,
    "options": {
        "validateUpsert": true,
        "caseSensitiveEmail": true,
        "emailVerificationRequired": true
    },
    "hidden": [
        "password",
        "keyStore",
        "verificationToken",
        "verificationTokenTime"
    ],
    "mixins": {
        "TimeStamp": {
            "createdAt": "createdAt",
            "updatedAt": "updatedAt",
            "required": false
        }
    },
    "properties": {
        "id": {
            "type": "string",
            "id": true
        },
        "userId": {
            "type": "string",
            "required": true
        },
        "password": {
            "type": "string",
            "required": true
        },
        "keyStore": {
            "type": "string"
        },
        "email": {
            "type": "string",
            "required": true
        },
        "fName": {
            "type": "string"
        },
        "lName": {
            "type": "string"
        },
        "karmaBalance": {
            "type": "number",
            "default": 0
        },
        "gyanScore": {
            "type": "number",
            "default": 0
        },
        "country": {
            "type": "string"
        },
        "currency": {
            "type": "string"
        },
        "timezone": {
            "type": "string"
        },
        "emailVerified": {
            "type": "boolean",
            "default": false
        },
        "verificationToken": {
            "type": "string"
        },
        "verificationTokenTime": {
            "type": "string"
        }
    },
    "validations": [],
    "relations": {
        "transactions": {
            "type": "hasMany",
            "model": "transactions",
            "foreignKey": "targetId",
            "through": "transaction_has_peer",
            "keyThrough": "sourceId"
        },
        "events": {
            "type": "hasMany",
            "model": "event",
            "foreignKey": "targetId",
            "through": "event_has_peer",
            "keyThrough": "sourceId"
        },
        "applications": {
            "type": "hasMany",
            "model": "application",
            "foreignKey": "targetId",
            "through": "application_has_peer",
            "keyThrough": "sourceId"
        }
    },
    "acls": [],
    "methods": {}
}
